version: '3.7'
services:
    #PHP Service
    app:
        build:
            context: ./docker
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
        environment:
            WWWUSER: '${WWWUSER}'
            XDEBUG_MODE: '${XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${XDEBUG_CONFIG:-client_host=host.docker.internal}'
        volumes:
            - '.:/var/www/html'
        networks:
            - common
        depends_on:
            - mysql
    
    #MySQL Service
    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'mysql-volume:/var/lib/mysql'
        networks:
            - common
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
            retries: 3
            timeout: 5s

    #Client
    client:
        image: node:14-alpine
        working_dir: /var/www/html
        expose:
            - '${APP_CLIENT_PORT:-3000}'
        volumes:
            - ./client:/var/www/html
        command: npm run start
        ports:
            - "3000:3000"
        environment:
            NODE_ENV: development
        depends_on:
            - app

#Docker Networks
networks:
    common:
        driver: bridge

#Volumes
volumes:
    mysql-volume:
        driver: local